!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Board	./board/board.py	/^class Board:$/;"	c
Board	./resources/board.py	/^class Board:$/;"	c
Character	./characters/character.py	/^class Character:$/;"	c
Dice	./actions/dice.py	/^class Dice:$/;"	c
Elf	./characters/players/elf.py	/^class Elf(Player):$/;"	c
ElfActions	./test_elf_unittest.py	/^class ElfActions(unittest.TestCase):$/;"	c
ElfInit	./test_elf_unittest.py	/^class ElfInit(unittest.TestCase):$/;"	c
Empty	./board/tiles/empty.py	/^class Empty(StaticTile):$/;"	c
Enemy	./characters/enemies/enemy.py	/^class Enemy(Character):$/;"	c
Goblin	./characters/enemies/goblin.py	/^class Goblin(Enemy):$/;"	c
Orc	./characters/enemies/orc.py	/^class Orc(Enemy):$/;"	c
Player	./characters/players/player.py	/^class Player(Character):$/;"	c
StaticTile	./board/tiles/content.py	/^class StaticTile():$/;"	c
Tile	./board/tiles/tile.py	/^class Tile():$/;"	c
Wall	./board/tiles/wall.py	/^class Wall(StaticTile):$/;"	c
__init__	./board/board.py	/^    def __init__(self):$/;"	m	class:Board
__init__	./board/tiles/content.py	/^    def __init__(self, display):$/;"	m	class:StaticTile
__init__	./board/tiles/empty.py	/^    def __init__(self, display):$/;"	m	class:Empty
__init__	./board/tiles/tile.py	/^    def __init__(self, content):$/;"	m	class:Tile
__init__	./board/tiles/wall.py	/^    def __init__(self, display):$/;"	m	class:Wall
__init__	./characters/character.py	/^    def __init__(self, position):$/;"	m	class:Character
__init__	./characters/enemies/goblin.py	/^    def __init__(self, position):$/;"	m	class:Goblin
__init__	./characters/enemies/orc.py	/^    def __init__(self, position, board):$/;"	m	class:Orc
__init__	./characters/players/elf.py	/^    def __init__(self, name, position, board):$/;"	m	class:Elf
__init__	./resources/board.py	/^    def __init__(self,y,x):$/;"	m	class:Board
_change_location	./characters/character.py	/^    def _change_location(self, new_position):$/;"	m	class:Character
_collision_check	./characters/character.py	/^    def _collision_check(self, direction, amount):$/;"	m	class:Character
_increment	./characters/character.py	/^    def _increment(self, direction, position):$/;"	m	class:Character
_tile_free	./characters/character.py	/^    def _tile_free(self, tile):$/;"	m	class:Character
amount	./iteration_test.py	/^amount = 3$/;"	v
attack	./characters/character.py	/^    def attack(self, direction):$/;"	m	class:Character
b	./test_collisions.py	/^b = Board(4,4)$/;"	v
b	./test_movement.py	/^b = Board(4,4)$/;"	v
b	./test_multi_chars.py	/^b = Board(4,4)$/;"	v
board	./class_test_board.py	/^board = board.replace('b','\\'')$/;"	v
board	./class_test_board.py	/^board = board.replace('j','+')$/;"	v
board	./class_test_board.py	/^board = board.replace('o',' ')$/;"	v
board	./class_test_board.py	/^board = board.replace('t',',')$/;"	v
board	./class_test_board.py	/^board = board.replace('x',x)$/;"	v
board	./class_test_board.py	/^board = board.to_numpy()$/;"	v
board	./class_test_board.py	/^board = pd.read_csv('hero_quest_board.csv', header=None)$/;"	v
board	./map.py	/^board = []$/;"	v
board	./np_test_board.py	/^board = board.replace('b','\\'')$/;"	v
board	./np_test_board.py	/^board = board.replace('j','+')$/;"	v
board	./np_test_board.py	/^board = board.replace('o',' ')$/;"	v
board	./np_test_board.py	/^board = board.replace('t',',')$/;"	v
board	./np_test_board.py	/^board = board.replace('x','-')$/;"	v
board	./np_test_board.py	/^board = board.replace('y','|')$/;"	v
board	./np_test_board.py	/^board = board.to_numpy()$/;"	v
board	./np_test_board.py	/^board = pd.read_csv('hero_quest_board.csv', header=None)$/;"	v
board	./small_board.py	/^board = Board()$/;"	v
board	./test_board.py	/^board = board.replace('b','\\'')$/;"	v
board	./test_board.py	/^board = board.replace('j','+')$/;"	v
board	./test_board.py	/^board = board.replace('o',' ')$/;"	v
board	./test_board.py	/^board = board.replace('t',',')$/;"	v
board	./test_board.py	/^board = board.replace('x','-')$/;"	v
board	./test_board.py	/^board = board.replace('y','|')$/;"	v
board	./test_board.py	/^board = board.to_numpy()$/;"	v
board	./test_board.py	/^board = pd.read_csv('hero_quest_board.csv', header=None)$/;"	v
check_east	./iteration_test.py	/^def check_east(board, position, amount, direction):$/;"	f
collision	./board/board.py	/^    def collision(self, old, amount, direction):$/;"	m	class:Board
collision	./resources/board.py	/^    def collision(self, old, amount, direction):$/;"	m	class:Board
d	./characters/character.py	/^    d = Dice()$/;"	v	class:Character
defend	./characters/character.py	/^    def defend(self):$/;"	m	class:Character
direction	./iteration_test.py	/^direction = 'E'$/;"	v
display	./board/board.py	/^    def display(self):$/;"	m	class:Board
init_position	./board/board.py	/^    def init_position(self, character):$/;"	m	class:Board
init_position	./resources/board.py	/^    def init_position(self, character):$/;"	m	class:Board
move	./characters/character.py	/^    def move(self, direction, amount):$/;"	m	class:Character
movement	./characters/character.py	/^    movement = 0$/;"	v	class:Character
movement_check	./iteration_test.py	/^def movement_check():$/;"	f
movement_roll	./characters/enemies/enemy.py	/^    def movement_roll(self):$/;"	m	class:Enemy
movement_roll	./characters/players/player.py	/^    def movement_roll(self):$/;"	m	class:Player
p	./test_collisions.py	/^def p(m):$/;"	f
p	./test_multi_chars.py	/^def p(m):$/;"	f
p1	./small_board.py	/^p1 = Elf('yoshida', [2,3], board)$/;"	v
p1	./test_collisions.py	/^p1 = Elf("yoshi", [1,1], b)$/;"	v
p1	./test_movement.py	/^p1 = Elf("yoshi", [0,0], b)$/;"	v
p1	./test_multi_chars.py	/^p1 = Elf("yoshi", [0,0], b)$/;"	v
p2	./small_board.py	/^p2 = Elf('dayoshi', [3,6], board)$/;"	v
p2	./test_collisions.py	/^p2 = Orc([0,1], b)$/;"	v
p2	./test_multi_chars.py	/^p2 = Orc([3,3], b)$/;"	v
position	./iteration_test.py	/^position = [0,0]$/;"	v
reader	./map.py	/^    reader = csv.reader(file)$/;"	v
roll	./actions/dice.py	/^    def roll(self, color, amount):$/;"	m	class:Dice
roll_red	./actions/dice.py	/^    def roll_red(self, dimensions):$/;"	m	class:Dice
roll_white	./actions/dice.py	/^    def roll_white(self):$/;"	m	class:Dice
search_doors	./board/tiles/content.py	/^    def search_doors():$/;"	m	class:StaticTile
search_stairs	./board/tiles/content.py	/^    def search_stairs():$/;"	m	class:StaticTile
search_traps	./board/tiles/content.py	/^    def search_traps():$/;"	m	class:StaticTile
search_treasure	./board/tiles/content.py	/^    def search_treasure():$/;"	m	class:StaticTile
setUp	./test_elf_unittest.py	/^    def setUp(self):$/;"	m	class:ElfActions
setUp	./test_elf_unittest.py	/^    def setUp(self):$/;"	m	class:ElfInit
tearDown	./test_elf_unittest.py	/^    def tearDown(self):$/;"	m	class:ElfActions
tearDown	./test_elf_unittest.py	/^    def tearDown(self):$/;"	m	class:ElfInit
test_board_position	./test_elf_unittest.py	/^    def test_board_position(self):$/;"	m	class:ElfInit
test_movement	./test_elf_unittest.py	/^    def test_movement(self):$/;"	m	class:ElfActions
test_movement_limit	./test_elf_unittest.py	/^    def test_movement_limit(self):$/;"	m	class:ElfActions
test_name	./test_elf_unittest.py	/^    def test_name(self):$/;"	m	class:ElfInit
test_position	./test_elf_unittest.py	/^    def test_position(self):$/;"	m	class:ElfInit
test_tag	./test_elf_unittest.py	/^    def test_tag(self):$/;"	m	class:ElfInit
test_turn_start	./test_elf_unittest.py	/^    def test_turn_start(self):$/;"	m	class:ElfActions
turn_end	./characters/character.py	/^    def turn_end(self):$/;"	m	class:Character
turn_start	./characters/character.py	/^    def turn_start(self):$/;"	m	class:Character
update_position	./board/board.py	/^    def update_position(self, character, amount, direction):$/;"	m	class:Board
update_position	./resources/board.py	/^    def update_position(self, character, amount, direction):$/;"	m	class:Board
x	./class_test_board.py	/^x = HWall()$/;"	v
y	./class_test_board.py	/^y = VWall()$/;"	v
